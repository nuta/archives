//! A singleton global object that provides support for shared memory. clients can
//! create wl_shm_pool objects using the create_pool request. at connection setup
//! time, the wl_shm object emits one or more format events to inform clients about
//! the valid pixel formats that can be used for buffers.

//
//
//              GENERATED BY OUR WAYLAND-SCANNER. DO NOT EDIT!
//
//

#![allow(unused)]
#![allow(clippy::from_over_into)]
#![allow(clippy::match_single_binding)]

use crate::wl::{
    Array, Connection, Handle, Interface, Message, NewId, ObjectId, Opcode, Payload, PayloadType,
    RawMessage, SendError,
};
use alloc::rc::Rc;
use alloc::string::String;
use core::cell::RefCell;
use smallvec::smallvec;

use crate::wl::protocols::common::wl_buffer::WlBuffer;
use crate::wl::protocols::common::wl_callback::WlCallback;
use crate::wl::protocols::common::wl_compositor::WlCompositor;
use crate::wl::protocols::common::wl_data_device::WlDataDevice;
use crate::wl::protocols::common::wl_data_device_manager::WlDataDeviceManager;
use crate::wl::protocols::common::wl_data_offer::WlDataOffer;
use crate::wl::protocols::common::wl_data_source::WlDataSource;
use crate::wl::protocols::common::wl_display::WlDisplay;
use crate::wl::protocols::common::wl_keyboard::WlKeyboard;
use crate::wl::protocols::common::wl_output::WlOutput;
use crate::wl::protocols::common::wl_pointer::WlPointer;
use crate::wl::protocols::common::wl_region::WlRegion;
use crate::wl::protocols::common::wl_registry::WlRegistry;
use crate::wl::protocols::common::wl_seat::WlSeat;
use crate::wl::protocols::common::wl_shell::WlShell;
use crate::wl::protocols::common::wl_shell_surface::WlShellSurface;

use crate::wl::protocols::common::wl_shm::*;
use crate::wl::protocols::common::wl_shm_pool::WlShmPool;
use crate::wl::protocols::common::wl_subcompositor::WlSubcompositor;
use crate::wl::protocols::common::wl_subsurface::WlSubsurface;
use crate::wl::protocols::common::wl_surface::WlSurface;
use crate::wl::protocols::common::wl_touch::WlTouch;
use crate::wl::protocols::common::xdg_popup::XdgPopup;
use crate::wl::protocols::common::xdg_positioner::XdgPositioner;
use crate::wl::protocols::common::xdg_surface::XdgSurface;
use crate::wl::protocols::common::xdg_toplevel::XdgToplevel;
use crate::wl::protocols::common::xdg_wm_base::XdgWmBase;

pub trait WlShmExt {
    /// Create a new wl_shm_pool object. the pool can be used to create shared memory
    /// based buffer objects. the server will mmap size bytes of the passed file
    /// descriptor, to use as backing memory for the pool.
    fn create_pool(&self, id: NewId, fd: Handle, size: i32) -> Result<(), SendError>;
}

impl WlShmExt for WlShm {
    /// Create a new wl_shm_pool object. the pool can be used to create shared memory
    /// based buffer objects. the server will mmap size bytes of the passed file
    /// descriptor, to use as backing memory for the pool.
    fn create_pool(&self, id: NewId, fd: Handle, size: i32) -> Result<(), SendError> {
        self.connection()
            .borrow_mut()
            .send(Request::CreatePool { id, fd, size }.into_raw(self.id()))
    }
}
