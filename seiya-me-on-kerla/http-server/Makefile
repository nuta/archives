# Default values for build system.
export V         ?=
export BUILD_DIR ?= build
export RELEASE   ?=

# The default build target.
.PHONY: default
default: build

# Disable builtin implicit rules and variables.
MAKEFLAGS += --no-builtin-rules --no-builtin-variables
.SUFFIXES:

# Enable verbose output if $(V) is set.
ifeq ($(V),)
.SILENT:
endif

sources += $(wildcard *.c)
objs := $(patsubst %.c,$(BUILD_DIR)/%.o, $(sources))

PROGRESS := printf "  \\033[1;96m%8s\\033[0m  \\033[1;m%s\\033[0m\\n"

CFLAGS += -g3 -std=c11 -O2
CFLAGS += -Wall -Wextra
CFLAGS += -Werror=implicit-function-declaration
CFLAGS += -Werror=int-conversion
CFLAGS += -Werror=incompatible-pointer-types
CFLAGS += -Werror=shift-count-overflow
CFLAGS += -Werror=switch
CFLAGS += -Werror=return-type
CFLAGS += -Wno-unused-parameter
CFLAGS += -D_XOPEN_SOURCE=700

#
#  Build Commands
#
.PHONY: build
build: $(BUILD_DIR)/http-server

.PHONY: clean
clean:
	rm -rf $(BUILD_DIR)

.PHONY: run
run: $(BUILD_DIR)/http-server
	$(PROGRESS) "RUN" $(BUILD_DIR)/http-server
	./$(BUILD_DIR)/http-server -b localhost -p 7890 -c 32 -d ../out

#
#  Build Rules
#
$(BUILD_DIR)/http-server: $(objs) Makefile
	$(PROGRESS) "CC" $@
	$(CC) -static -o $@ $(objs)

$(BUILD_DIR)/%.o: %.c Makefile
	$(PROGRESS) "CC" $<
	mkdir -p $(@D)
	$(CC) $(CFLAGS) -c -o $@ $< -MD -MF $(@:.o=.deps)

# Build dependencies generated by clang and Cargo.
-include $(shell find $(BUILD_DIR) -name "*.deps" 2>/dev/null)
